# -*- coding: utf-8 -*-
"""Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/155hmG3OPutzysUXaAggF7xmzclQny9Ti
"""



from google.colab import drive
drive.mount('/content/drive')

cd drive/

cd MyDrive/

cd Colab\ Notebooks

cd datasets/

import pandas as pd
ref = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/datasets/weight-height.csv")
ref

ref.mean()

ref.mode()

ref.describe()

percentile_99 = ref.Height.quantile(0.99 , interpolation='linear')
percentile_99

ref_no_outlier = ref[ref.Height>=percentile_99]
ref_no_outlier

#plt.plot(graph['height'],graph[ 'weight'])
import numpy as np

ref['Height'].isnull().values.any()

ref['Height'].replace(np.nan , ref.Height.mean())

ref['Height'].isnull().sum().sum()

ref['Gender'].replace('Female' , 1 , inplace = True)
ref['Gender'].replace('Male'  , 0 , inplace = True)
ref['Gender'].replace('Gender' , 0 , inplace = True)
#X = ref.iloc[:, :-1].values
#y = ref.iloc[:, 2].values
#ref
X = ref.iloc[:, :-1].values
y = ref.iloc[:, 2].values
from sklearn.preprocessing import LabelEncoder
labelEncoder_gender =  LabelEncoder()
X[:,0] = labelEncoder_gender.fit_transform(X[:,0])

# Optional - if you want to convert X to float data type
import numpy as np
X = np.vstack(X[:, :]).astype(np.float)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
lin_pred = lin_reg.predict(X_test)

lin_pred = lin_reg.predict(X_test)

from sklearn import metrics
print('R square = ',metrics.r2_score(y_test, lin_pred))
print('Mean squared Error = ',metrics.mean_squared_error(y_test, lin_pred))
print('Mean absolute Error = ',metrics.mean_absolute_error(y_test, lin_pred))

my_weight_pred = lin_reg.predict([[0,74]])
print('My predicted weight = ',my_weight_pred)